/*此程序为擦除一次的程序，既擦除一块连续黑色方格的源程序*/


const int TOP=0,BOTTOM=19,LEFT=0,RIGHT=19;//方格所在的矩阵边界

//擦除相连的方格，其参数cells[][]为方格所在矩阵，start_x, start_y为给定的起始坐标
void eraserGraphic(char cells[][],int start_x,int start_y)
{ int i=0,j=0;
  if(cells[start_x][start_y]=='-')//本程序以‘-’代表白格子，‘@’代表黑格子
	printf("所选方格无需擦除");
  eraserCell(start_x,start_y);
 
  
}

//擦除相邻方格的种子算法
void eraserCell(int start_x,int start_y)
{
	cells[start_x][start_y]='-';
	
	int up_x,down_x,left_y,right_y;
	if(start_x>TOP&&start_x<BOTTOM){up_x=start_x-1;down_x=start_x+1;}
		else if(start_x==TOP)down_x=start_x+1;
		else if(start_x==BOTTOM)up_x=start_x-1;
	if(start_y>LEFT&&start_y<=RIGHT){left_y=start_y-1;right_y=start_y+1;}
		else if(start_y=LEFT)right_y=start_y+1;
		else if(start_y=RIGHT)left_y=start_y-1;
	if(cells[up_x][start_y].clor==1)eraserCell(up_x,start_y);
	if(cells[down_x][start_y].clor==1)eraserCell(down_x,start_y);
	if(cells[start_x][left_y].clor==1)eraserCell(start_x,left_y);
	if(cells[start_x][right_y].clor==1)eraserCell(start_x,right_y);
}